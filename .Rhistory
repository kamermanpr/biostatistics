plot(x$cmean)
barplot(x$cmean)
a <- rep(99, 9)
a
dplyr::cummean(a)
a == dplyr::cummean(a)
a <- seq(0:9, 1)
a <- seq(0, 9, 1)
a
dplyr::cummean(a)
data <- rsnorm(20000, mean = 0, sd = 1, xi = -10)
values <- c()
foo <- function(dat = data, value = values, cnt = cnts){
for(i in 1:10000) {
value[[i]] <- mean(sample(dat, size = 200, replace = TRUE))
}
value
}
bar <- foo()
baz <- data_frame(cnt = as.character(1:10000), val = bar)
x <- baz %>%
mutate(cmean = cummean(val))
barplot(x$cmean)
data <- rsnorm(20000, mean = 0, sd = 1, xi = -10)
values <- c()
foo <- function(dat = data, value = values, cnt = cnts){
for(i in 1:10000) {
value[[i]] <- mean(sample(dat, size = 395, replace = TRUE))
}
value
}
bar <- foo()
baz <- data_frame(cnt = as.character(1:10000), val = bar)
x <- baz %>%
mutate(cmean = cummean(val))
barplot(x$cmean)
abline(h = 0)
abline(h = 0, col = '#FFFFFF')
hist(x$cmean)
data <- rsnorm(20000, mean = 0, sd = 1, xi = -10)
values <- c()
foo <- function(dat = data, value = values, cnt = cnts){
for(i in 1:1000) {
value[[i]] <- mean(sample(dat, size = 200, replace = TRUE))
}
value
}
bar <- foo()
baz <- data_frame(cnt = as.character(1:1000), val = bar)
x <- baz %>%
mutate(cmean = cummean(val))
hist(x$cmean)
data <- rsnorm(20000, mean = 0, sd = 1, xi = -10)
values <- c()
foo <- function(dat = data, value = values, cnt = cnts){
for(i in 1:1000) {
value[[i]] <- mean(sample(dat, size = 50, replace = TRUE))
}
value
}
bar <- foo()
baz <- data_frame(cnt = as.character(1:1000), val = bar)
x <- baz %>%
mutate(cmean = cummean(val))
hist(x$cmean)
hist(baz$val)
data <- rsnorm(20000, mean = 0, sd = 1, xi = -10)
values <- c()
foo <- function(dat = data, value = values, cnt = cnts){
for(i in 1:1000) {
value[[i]] <- sample(dat, size = 50, replace = TRUE)
}
value
}
bar <- foo()
baz <- data_frame(cnt = as.character(1:1000), val = bar)
x <- baz %>%
mutate(cmean = cummean(val))
data <- rsnorm(20000, mean = 0, sd = 1, xi = -10)
values <- c()
foo <- function(dat = data, value = values, cnt = cnts){
for(i in 1:1000) {
value[[i]] <- sample(dat, size = 100, replace = TRUE)
}
value
}
bar <- foo()
baz <- data_frame(cnt = as.character(1:1000), val = bar)
x <- baz %>%
mutate(cmean = cummean(val))
baz
data <- rsnorm(20000, mean = 0, sd = 1, xi = -10)
values <- c()
foo <- function(dat = data, value = values, cnt = cnts){
for(i in 1:1000) {
value[[i]] <- mean(sample(dat, size = 100, replace = TRUE))
}
value
}
bar <- foo()
baz <- data_frame(cnt = as.character(1:1000), val = bar)
gg <- ggplot(baz, aes(x = val, frame = cnt)) +
geom_bar(aes(cumulative = TRUE))
gg_animate(gg)
gg <- ggplot(baz, aes(x = val, group = cnt, frame = cnt)) +
geom_bar(aes(cumulative = TRUE))
gg_animate(gg)
gg <- ggplot(baz, aes(y = val, x = cnt)) +
geom_bar()
gg
geom_col()
gg <- ggplot(baz, aes(y = val, x = cnt)) +
geom_col(stat = 'identity')
gg <- ggplot(baz, aes(y = val, x = cnt)) +
geom_bar(stat = 'identity')
gg
gg <- ggplot(baz, aes(val)) +
geom_bar(stat = 'identity')
gg
baz <- data_frame(cnt = as.character(1:1000), val = bar)
gg <- ggplot(baz, aes(val)) +
geom_bar(stat = 'identity')
gg <- ggplot(baz, aes(val, cnt)) +
geom_bar(stat = 'identity')
gg
library(dplyr)
library(tidyr)
library(ggplot2)
library(gganimate)
library(grid)
library(scales)
library(fGarch) # for 'snorm' function to model distributions
data <- rsnorm(20000, mean = 0, sd = 1, xi = -10)
values <- c()
foo <- function(dat = data, value = values, cnt = cnts){
for(i in 1:1000) {
value[[i]] <- mean(sample(dat, size = 100, replace = TRUE))
}
value
}
bar <- foo()
baz <- data_frame(cnt = as.character(1:1000), val = bar)
barplot(baz$val)
gg <- ggplot(baz, aes(val, cnt)) +
geom_bar(stat = 'identity')
gg
gg <- ggplot(baz, aes(val)) +
geom_bar(stat = 'identity')
gg
gg <- ggplot(baz, aes(y=val)) +
geom_bar(stat = 'identity')
gg
getwd()
setwd('/Users/PeterKamerman/Dropbox/_home/github/biostatistics/slides-decks/lecture_3/')
getwd()
library(dplyr)
library(tidyr)
library(ggplot2)
library(gganimate)
library(scales)
library(grid)
library(fGarch)
# Create dummy variables
lst <- list()
cnt <- 1:1000
data <- rsnorm(20000, mean = 0, sd = 1, xi = 10)
# Creat function to take x samples from 'data' and make a list
foo <- function(l = lst, c = cnt, d = data) {
for(i in cnt){
l[[i]] <- mean(sample(data, size = 100))
}
l
}
bar <- foo()
baz <- round(unlist(bar), 2)
boo <- xtabs(~baz)
length(boo)
# Make data.frame
bee <- data_frame(bin = c(1:length(boo)), count = as.numeric(boo)) %>%
arrange(count)
gg <- ggplot(bee, aes(count)) +
geom_histogram() +
theme_bw()
gg
library(cowplot)
gg <- ggplot(bee, aes(count)) +
geom_histogram() +
theme_cowplot()
gg
gg <- ggplot(bee, aes(count)) +
geom_histogram(bins = 10) +
theme_cowplot()
gg
gg <- ggplot(bee, aes(count)) +
geom_histogram() +
theme_cowplot()
gg
bee <- data_frame(bin = c(1:length(boo)), freq = as.numeric(boo)) %>%
arrange(freq)
gg <- ggplot(bee, aes(count)) +
geom_histogram() +
theme_cowplot()
gg
bee <- data_frame(bin = c(1:length(boo)), freq = as.numeric(boo)) %>%
arrange(freq)
gg <- ggplot(bee, aes(freq)) +
geom_histogram() +
theme_cowplot()
gg
gg <- ggplot(bee, aes(x = freq)) +
geom_histogram() +
theme_cowplot()
gg
gg <- ggplot(bee, aes(x = freq)) +
geom_bar(stat = 'identity') +
theme_cowplot()
gg
gg <- ggplot(bee, aes(y = freq, x = bin)) +
geom_bar(stat = 'identity') +
theme_cowplot()
gg
gg <- ggplot(bee, aes(y = freq, x = bin, frame = bin)) +
geom_bar(aes(cumulative = TRUE), stat = 'identity') +
theme_cowplot()
gg
gg_animate(gg)
gg <- ggplot(bee, aes(y = freq, x = bin, frame = bin)) +
geom_bar(aes(cumulative = TRUE), stat = 'identity', fill = '#0072B2', colour = '#0072B2') +
theme_bw()
gg
nam <- names(boo)
bee <- data_frame(mean = as.numeric(name)), freq = as.numeric(boo)) %>%
bee <- data_frame(mean = as.numeric(name), freq = as.numeric(boo)) %>%
arrange(freq)
bee <- data_frame(mean = as.numeric(nam), freq = as.numeric(boo)) %>%
arrange(freq)
bee
bee <- data_frame(sample = c(1:length(boo)),
mean = as.numeric(nam),
freq = as.numeric(boo)) %>%
arrange(freq)
bee
gg <- ggplot(bee, aes(y = arrange(freq), x = bin, frame = bin)) +
geom_bar(aes(cumulative = TRUE), stat = 'identity',
fill = '#0072B2', colour = '#0072B2') +
labs(x = 'sample number', y = )
gg <- ggplot(bee, aes(y = arrange(freq), x = bin, frame = bin)) +
geom_bar(aes(cumulative = TRUE), stat = 'identity',
fill = '#0072B2', colour = '#0072B2') +
geom_vline(xintercept = 0, colour = "#E69F00") +
labs(x = 'Sample mean', y = 'Frequency') +
theme_bw()
gg
gg <- ggplot(bee, aes(y = arrange(freq), x = mean, frame = bin)) +
geom_bar(aes(cumulative = TRUE), stat = 'identity',
fill = '#0072B2', colour = '#0072B2') +
geom_vline(xintercept = 0, colour = "#E69F00") +
labs(x = 'Sample mean', y = 'Frequency') +
theme_bw()
gg
gg <- ggplot(bee, aes(y = order(freq), x = mean, frame = bin)) +
geom_bar(aes(cumulative = TRUE), stat = 'identity',
fill = '#0072B2', colour = '#0072B2') +
geom_vline(xintercept = 0, colour = "#E69F00") +
labs(x = 'Sample mean', y = 'Frequency') +
theme_bw()
gg
gg <- ggplot(bee, aes(y = order(freq), x = mean, frame = sample)) +
geom_bar(aes(cumulative = TRUE), stat = 'identity',
fill = '#0072B2', colour = '#0072B2') +
geom_vline(xintercept = 0, colour = "#E69F00") +
labs(x = 'Sample mean', y = 'Frequency') +
theme_bw()
gg
gg <- ggplot(bee, aes(y = order(freq), x = mean, frame = sample)) +
geom_bar(aes(cumulative = TRUE), stat = 'identity',
fill = '#0072B2', colour = '#0072B2') +
geom_vline(xintercept = 0, colour = "#E69F00", size = 2) +
labs(x = 'Sample mean', y = 'Frequency') +
theme_bw()
gg
gg <- ggplot(bee, aes(y = order(freq), x = mean, frame = sample)) +
geom_bar(aes(cumulative = TRUE), stat = 'identity',
fill = '#0072B2', colour = '#0072B2') +
geom_vline(xintercept = 0, colour = "#E69F00", size = 2) +
labs(x = 'Sample mean', y = 'Frequency') +
theme_bw(axis.text = element_text(size = 18))
gg
gg <- ggplot(bee, aes(y = order(freq), x = mean, frame = sample)) +
geom_bar(aes(cumulative = TRUE), stat = 'identity',
fill = '#0072B2', colour = '#0072B2') +
geom_vline(xintercept = 0, colour = "#E69F00", size = 2) +
labs(x = 'Sample mean', y = 'Frequency') +
theme_bw() +
theme(axis.text = element_text(size = 18))
gg
gg <- ggplot(bee, aes(y = order(freq), x = mean, frame = sample)) +
geom_bar(aes(cumulative = TRUE), stat = 'identity',
fill = '#0072B2', colour = '#0072B2') +
geom_vline(xintercept = 0, colour = "#E69F00", size = 1) +
labs(x = 'Sample mean', y = 'Frequency') +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14))
gg
gg <- ggplot(bee, aes(y = order(freq), x = mean, frame = sample)) +
geom_bar(aes(cumulative = TRUE), stat = 'identity',
fill = '#0072B2', colour = '#0072B2') +
geom_vline(xintercept = 0, colour = "#E69F00", size = 1) +
labs(x = '\nSample mean', y = 'Frequency\n') +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14))
gg
gg_animate(gg, "output.gif")
bee
bee <- data_frame(sample = c(1:length(boo)),
mean = as.numeric(nam),
freq = as.numeric(boo)) %>%
arrange(freq) %>%
mutate(sample = factor(sample, levels = sample))
bee
gg <- ggplot(bee, aes(y = freq, x = mean, frame = sample)) +
geom_bar(aes(cumulative = TRUE), stat = 'identity',
fill = '#0072B2', colour = '#0072B2') +
geom_vline(xintercept = 0, colour = "#E69F00", size = 1) +
labs(x = '\nSample mean', y = 'Frequency\n') +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14))
gg
gg_animate(gg, interval = 0.4, "output.gif")
setwd('/Users/PeterKamerman/Dropbox/_home/github/biostatistics/slides-decks/lecture_3/resources/')
gg_animate(gg, "central-limit.gif")
bee <- data_frame(sample = c(1:length(boo)),
mean = as.numeric(nam),
freq = as.numeric(boo)) %>%
arrange(freq) %>%
mutate(sample = factor(sample))
bee
gg <- ggplot(bee, aes(y = freq, x = mean, frame = sample)) +
geom_bar(aes(cumulative = TRUE), stat = 'identity',
fill = '#0072B2', colour = '#0072B2') +
geom_vline(xintercept = 0, colour = "#E69F00", size = 1) +
labs(x = '\nSample mean', y = 'Frequency\n') +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14))
gg
gg_animate(gg, "central-limit.gif")
bee <- data_frame(sample = c(1:length(boo)),
mean = as.numeric(nam),
freq = as.numeric(boo)) %>%
arrange(freq)
gg <- ggplot(bee, aes(y = freq, x = mean, frame = sample)) +
geom_bar(aes(cumulative = TRUE), stat = 'identity',
fill = '#0072B2', colour = '#0072B2') +
geom_vline(xintercept = 0, colour = "#E69F00", size = 1) +
labs(x = '\nSample mean', y = 'Frequency\n') +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14))
gg
gg_animate(gg, "central-limit.gif")
gg_animate(gg, interval = 0.4, "central-limit.gif")
ord <- bee$sample
ord
gg <- ggplot(bee, aes(y = freq, x = mean, frame = sample)) +
geom_bar(aes(cumulative = TRUE), stat = 'identity',
fill = '#0072B2', colour = '#0072B2') +
geom_vline(xintercept = 0, colour = "#E69F00", size = 1) +
scale_x_discrete(limits = ord) +
labs(x = '\nSample mean', y = 'Frequency\n') +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14))
gg
gg_animate(gg, interval = 0.2, "central-limit.gif")
gg <- ggplot(bee, aes(y = freq, x = mean, frame = sample)) +
geom_bar(aes(cumulative = TRUE), stat = 'identity',
fill = '#0072B2', colour = '#0072B2') +
geom_vline(xintercept = 0, colour = "#E69F00", size = 1) +
labs(title = 'Distribution of sample means\nfrom 1000 samples of  n = 200',
x = '\nSample mean', y = 'Frequency\n') +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14))
gg
skew <- ggplot(data, aes(data)) +
geom_density(fill = '#0072B2', colour = '#0072B2') +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14))
data.2 <- data_frame(data = data)
skew <- ggplot(data.2, aes(data)) +
geom_density(fill = '#0072B2', colour = '#0072B2') +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14))
skew
skew <- ggplot(data.2, aes(data)) +
geom_density(fill = '#0072B2', colour = '#0072B2') +
labs(x = 'Value', y = 'Probability') +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14))
skew
skew <- ggplot(data.2, aes(data)) +
geom_density(fill = '#0072B2', colour = '#0072B2') +
labs(title = 'Right-skewed data',
x = '\nValue', y = 'Probability\n') +
theme_bw() +
theme(axis.text = element_text(size = 14),
axis.title = element_text(size = 14))
skew
ggsave('central-limit-2.gif', skew)
ggsave('central-limit-2.png', skew)
ggsave('central-limit-2.png', skew, width = 480, height = 480)
ggsave('central-limit-2.png', skew, width = 7, height = 7)
data.2 <- data_frame(data = data)
skew <- ggplot(data.2, aes(data)) +
geom_density(fill = '#0072B2', colour = '#0072B2') +
labs(x = '\nValue', y = 'Probability\n') +
theme_bw() +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 20))
ggsave('central-limit-2.png', skew, width = 7, height = 7)
gg <- ggplot(bee, aes(y = freq, x = mean, frame = sample)) +
geom_bar(aes(cumulative = TRUE), stat = 'identity',
fill = '#0072B2', colour = '#0072B2') +
geom_vline(xintercept = 0, colour = "#E69F00", size = 1) +
labs(title = 'Distribution of sample means\nfrom 1000 samples of  n = 200',
x = '\nSample mean', y = 'Frequency\n') +
theme_bw() +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 20))
# animate plots
gg_animate(gg, interval = 0.2, "central-limit.mp4")
gg_animate(gg, interval = 0.2, "central-limit.html")
gg_animate(gg, interval = 0.2, "central-limit.gif")
install.packages('animation')
skew <- ggplot(data.2, aes(data)) +
geom_density(fill = '#0072B2', colour = '#0072B2') +
labs(title = 'Right-skewed distribution',
x = '\nValue', y = 'Probability\n') +
theme_bw() +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 20))
ggsave('central-limit-2.png', skew, width = 7, height = 7)
skew <- ggplot(data.2, aes(data)) +
geom_density(fill = '#0072B2', colour = '#0072B2') +
labs(title = 'Right-skewed normal distribution\n($\bar{x}$=0, $sd$=1, $xi$=10',
x = '\nValue', y = 'Probability\n') +
theme_bw() +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 20))
ggsave('central-limit-2.png', skew, width = 7, height = 7)
skew <- ggplot(data.2, aes(data)) +
geom_density(fill = '#0072B2', colour = '#0072B2') +
labs(title = 'Right-skewed normal distribution\n(mean = 0, sd = 1, skewness parameter = 10',
x = '\nValue', y = 'Probability\n') +
theme_bw() +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 20))
ggsave('central-limit-2.png', skew, width = 7, height = 7)
skew <- ggplot(data.2, aes(data)) +
geom_density(fill = '#0072B2', colour = '#0072B2') +
labs(title = 'Right-skewed normal distribution\n(mean = 0, sd = 1, skewness parameter = 10)',
x = '\nValue', y = 'Probability\n') +
theme_bw() +
theme(axis.text = element_text(size = 20),
axis.title = element_text(size = 20))
ggsave('central-limit-2.png', skew, width = 7, height = 7)
skew <- ggplot(data.2, aes(data)) +
geom_density(fill = '#0072B2', colour = '#0072B2') +
labs(title = 'Right-skewed normal distribution\n(mean = 0, sd = 1, skewness parameter = 10)',
x = '\nValue', y = 'Probability\n') +
theme_bw() +
theme(plot.title = element_text(size = 20),
axis.text = element_text(size = 20),
axis.title = element_text(size = 20))
ggsave('central-limit-2.png', skew, width = 7, height = 7)
skew <- ggplot(data.2, aes(data)) +
geom_density(fill = '#0072B2', colour = '#0072B2') +
labs(title = 'Right-skewed normal distribution\n_(mean = 0, sd = 1, skewness parameter = 10)_',
x = '\nValue', y = 'Probability\n') +
theme_bw() +
theme(plot.title = element_text(size = 20),
axis.text = element_text(size = 20),
axis.title = element_text(size = 20))
ggsave('central-limit-2.png', skew, width = 7, height = 7)
skew <- ggplot(data.2, aes(data)) +
geom_density(fill = '#0072B2', colour = '#0072B2') +
labs(title = 'Right-skewed normal distribution\n(mean = 0, sd = 1, skewness parameter = 10)',
x = '\nValue', y = 'Probability\n') +
theme_bw() +
theme(plot.title = element_text(size = 20),
axis.text = element_text(size = 20),
axis.title = element_text(size = 20))
ggsave('central-limit-2.png', skew, width = 7, height = 7)
gg <- ggplot(bee, aes(y = freq, x = mean, frame = sample)) +
geom_bar(aes(cumulative = TRUE), stat = 'identity',
fill = '#0072B2', colour = '#0072B2') +
geom_vline(xintercept = 0, colour = "#E69F00", size = 1) +
labs(title = 'Distribution of sample means\nfrom 1000 samples of  n = 200 each',
x = '\nSample mean', y = 'Frequency\n') +
theme_bw() +
theme(plot.title = element_text(size = 20),
axis.text = element_text(size = 20),
axis.title = element_text(size = 20))
# animate plots
gg_animate(gg, interval = 0.2, "central-limit.gif")
